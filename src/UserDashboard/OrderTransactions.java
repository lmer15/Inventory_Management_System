/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserDashboard;

import config.dbConnector;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Font;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JDesktopPane;
import javax.swing.JTable;
import javax.swing.RowFilter;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author Elmer Rapon
 */
public class OrderTransactions extends javax.swing.JInternalFrame {

    /**
     * Creates new form OrderTransactions
     */
    public OrderTransactions() {
        initComponents();
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0,0,0,0));
        BasicInternalFrameUI bi = (BasicInternalFrameUI)this.getUI();
        bi.setNorthPane(null);
        displayData();
    }

    
    Color orig = new Color(255,255,255);
    Color newColor =new Color(204,204,204);
    Color origC = new Color(0,102,51);
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
        public void displayData() {
        try {
            dbConnector dbc = new dbConnector();
            ResultSet rs = dbc.getData(
                "SELECT " +
                "drgenerator.DRNo AS 'DR', " +
                "customerinfo.CustomerName AS 'CUSTOMER', " +
                "CONCAT(product_information.P_Name, ' ', product_information.P_Flavor, ' ', product_information.P_Net, ' ', "
                + "product_information.P_Unit) AS 'PRODUCT', " +
                "drgenerator.DeliveryDate AS 'DATE', " +
                "SUM(orderform.O_TotalAmount) AS 'TOTAL', " +
                "drgenerator.DRStatus AS 'STATUS', " +
                "CONCAT(lmer_table.lmer_fname, ' ', lmer_table.lmer_lname) AS 'CASHIER' " +
                "FROM drgenerator " +
                "JOIN orderform ON drgenerator.DRNo = orderform.DRNumber " +
                "JOIN product_information ON orderform.ProductID = product_information.P_Code " +
                "JOIN lmer_table ON drgenerator.CashierID = lmer_table.lmer_ID " +
                "JOIN customerinfo ON drgenerator.CustomerID = customerinfo.CustomerID " +
                "GROUP BY drgenerator.DRNo, customerinfo.CustomerName, " +
                "product_information.P_Name, product_information.P_Flavor, product_information.P_Net, product_information.P_Unit, " +
                "drgenerator.DeliveryDate, orderform.O_TotalAmount, drgenerator.DRStatus, " +
                "lmer_table.lmer_fname, lmer_table.lmer_lname"
            );

            TableOrder.setModel(DbUtils.resultSetToTableModel(rs));
            JTableHeader header = TableOrder.getTableHeader();
            header.setBackground(Color.GRAY);
            header.setForeground(Color.BLACK);
            header.setFont(new Font("Microsoft Gothic", Font.BOLD, 10));
            header.setPreferredSize(new Dimension(header.getPreferredSize().width, 30)); // Adjust header height

            // Customize row appearance
            TableOrder.setRowHeight(30);
            TableOrder.setShowGrid(true);
            DefaultTableCellRenderer renderer = new DefaultTableCellRenderer() {
                @Override
                public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
                    Component c = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
                    c.setBackground(row % 2 == 0 ? Color.LIGHT_GRAY : Color.WHITE); // Alternating row colors
                    return c;
                }
            };
            for (int i = 0; i < TableOrder.getColumnCount(); i++) {
                TableOrder.getColumnModel().getColumn(i).setCellRenderer(renderer);
            }

            rs.close();
        } catch (SQLException ex) {
            System.out.println("Errors: " + ex.getMessage());
        }
    }

    
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        newDR = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        buttonSearch = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TableOrder = new javax.swing.JTable();
        back = new javax.swing.JLabel();
        updateDR1 = new javax.swing.JLabel();
        textSearch = new javax.swing.JTextField();

        jPanel1.setLayout(null);

        newDR.setBackground(new java.awt.Color(0, 102, 51));
        newDR.setFont(new java.awt.Font("Microsoft YaHei", 1, 18)); // NOI18N
        newDR.setForeground(new java.awt.Color(255, 255, 255));
        newDR.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        newDR.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PICTURE/icons8-new-ticket-20.png"))); // NOI18N
        newDR.setText("NEW");
        newDR.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        newDR.setOpaque(true);
        newDR.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                newDRMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                newDRMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                newDRMouseExited(evt);
            }
        });
        jPanel1.add(newDR);
        newDR.setBounds(20, 90, 110, 40);

        jLabel1.setFont(new java.awt.Font("Microsoft YaHei", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(50, 150, 122));
        jLabel1.setText("ORDER TRANSACTIONS");
        jLabel1.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(0, 0, 0)));
        jPanel1.add(jLabel1);
        jLabel1.setBounds(10, 0, 770, 40);

        buttonSearch.setBackground(new java.awt.Color(255, 255, 255));
        buttonSearch.setFont(new java.awt.Font("Microsoft YaHei", 1, 18)); // NOI18N
        buttonSearch.setForeground(new java.awt.Color(255, 255, 255));
        buttonSearch.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        buttonSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PICTURE/icons8-search-20.png"))); // NOI18N
        buttonSearch.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        buttonSearch.setOpaque(true);
        buttonSearch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonSearchMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                buttonSearchMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                buttonSearchMouseExited(evt);
            }
        });
        jPanel1.add(buttonSearch);
        buttonSearch.setBounds(700, 100, 40, 30);

        TableOrder.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        TableOrder.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        TableOrder.setGridColor(new java.awt.Color(0, 0, 0));
        jScrollPane1.setViewportView(TableOrder);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(10, 150, 740, 402);

        back.setBackground(new java.awt.Color(255, 255, 255));
        back.setFont(new java.awt.Font("Microsoft YaHei", 1, 18)); // NOI18N
        back.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        back.setText("BACK");
        back.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        back.setOpaque(true);
        back.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                backMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                backMouseExited(evt);
            }
        });
        jPanel1.add(back);
        back.setBounds(330, 590, 100, 40);

        updateDR1.setBackground(new java.awt.Color(0, 102, 51));
        updateDR1.setFont(new java.awt.Font("Microsoft YaHei", 1, 18)); // NOI18N
        updateDR1.setForeground(new java.awt.Color(255, 255, 255));
        updateDR1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        updateDR1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PICTURE/icons8-update-20.png"))); // NOI18N
        updateDR1.setText("UPDATE");
        updateDR1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        updateDR1.setOpaque(true);
        updateDR1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                updateDR1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                updateDR1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                updateDR1MouseExited(evt);
            }
        });
        jPanel1.add(updateDR1);
        updateDR1.setBounds(170, 90, 120, 40);

        textSearch.setBackground(new java.awt.Color(240, 240, 240));
        textSearch.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 51)));
        textSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textSearchKeyReleased(evt);
            }
        });
        jPanel1.add(textSearch);
        textSearch.setBounds(390, 100, 300, 30);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 768, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 700, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void newDRMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newDRMouseClicked
        // TODO add your handling code here:
        OrderForm of = new OrderForm();
        JDesktopPane desktopPane = (JDesktopPane) getParent();
        desktopPane.add(of);
        of.setVisible(true);
        setVisible(false);

    }//GEN-LAST:event_newDRMouseClicked

    private void newDRMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newDRMouseEntered
        // TODO add your handling code here:
        newDR.setBackground(newColor);
    }//GEN-LAST:event_newDRMouseEntered

    private void newDRMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newDRMouseExited
        // TODO add your handling code here:
        newDR.setBackground(origC);
    }//GEN-LAST:event_newDRMouseExited

    private void buttonSearchMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonSearchMouseEntered
        // TODO add your handling code here:
        buttonSearch.setBackground(newColor);
    }//GEN-LAST:event_buttonSearchMouseEntered

    private void buttonSearchMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonSearchMouseExited
        // TODO add your handling code here:
        buttonSearch.setBackground(orig);
    }//GEN-LAST:event_buttonSearchMouseExited

    private void backMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backMouseClicked
        // TODO add your handling code here:
        DRTransactions drT = new DRTransactions();
        JDesktopPane desktopPane = (JDesktopPane) getParent();
        desktopPane.add(drT);
        drT.setVisible(true);
        setVisible(false);
        
    }//GEN-LAST:event_backMouseClicked

    private void backMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backMouseEntered
        // TODO add your handling code here:
        back.setBackground(newColor);
    }//GEN-LAST:event_backMouseEntered

    private void backMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backMouseExited
        // TODO add your handling code here:
        back.setBackground(orig);
    }//GEN-LAST:event_backMouseExited

    private void updateDR1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updateDR1MouseEntered
        // TODO add your handling code here:
        updateDR1.setBackground(newColor);
    }//GEN-LAST:event_updateDR1MouseEntered

    private void updateDR1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updateDR1MouseExited
        // TODO add your handling code here:
        updateDR1.setBackground(origC);
    }//GEN-LAST:event_updateDR1MouseExited

    private void textSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textSearchKeyReleased
        // TODO add your handling code here:'
        TableModel search = TableOrder.getModel();
        TableRowSorter<TableModel> srch = new TableRowSorter<>(search);
        TableOrder.setRowSorter(srch);
        srch.setRowFilter(RowFilter.regexFilter("(?i)" +textSearch.getText()));
         
        
    }//GEN-LAST:event_textSearchKeyReleased

    private void buttonSearchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonSearchMouseClicked
        // TODO add your handling code here:
        TableModel search = TableOrder.getModel();
        TableRowSorter<TableModel> srch = new TableRowSorter<>(search);
        TableOrder.setRowSorter(srch);
        srch.setRowFilter(RowFilter.regexFilter("(?i)" +textSearch.getText()));
    }//GEN-LAST:event_buttonSearchMouseClicked

    private void updateDR1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updateDR1MouseClicked
        // TODO add your handling code here:\
        UpdateOrder up = new UpdateOrder();
        JDesktopPane desktopPane = (JDesktopPane) getParent();
        desktopPane.add(up);
        up.setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_updateDR1MouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TableOrder;
    private javax.swing.JLabel back;
    private javax.swing.JLabel buttonSearch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel newDR;
    private javax.swing.JTextField textSearch;
    private javax.swing.JLabel updateDR1;
    // End of variables declaration//GEN-END:variables
}
