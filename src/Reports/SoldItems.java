/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Reports;

import config.dbConnector;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Font;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JTable;
import javax.swing.RowFilter;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author Elmer Rapon
 */
public class SoldItems extends javax.swing.JInternalFrame {

    /**
     * Creates new form SoldItems
     */
    public SoldItems() {
        initComponents();
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0,0,0,0));
        BasicInternalFrameUI bi = (BasicInternalFrameUI)this.getUI();
        bi.setNorthPane(null);
        displayData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    Color orig = new Color(255,255,255);
    Color newColor =new Color(204,204,204);
    
    public void displayData(){
    try{
        dbConnector dbc = new dbConnector();
        ResultSet rs = dbc.getData("SELECT " +
                "orderform.DRNumber AS 'DR NO.', " +
                "customerinfo.CustomerName AS CUSTOMER, " +
                "drgenerator.DeliveryDate AS 'DATE', " +
                "orderform.OrderQuantity AS 'QUANTITY', " +                
                "orderform.O_TotalAmount AS 'AMOUNT', " +
                "CONCAT(product_information.P_Name, '', product_information.P_Flavor, ' ', product_information.P_Net, product_information.P_Unit) AS 'PRODUCT DETAILS', " +                    
                "CONCAT(lmer_table.lmer_fname, ' ', lmer_table.lmer_lname) AS 'CASHIER', " +
                "orderform.OrderStatus AS 'STATUS' " +
                "FROM orderform " +
                "JOIN drgenerator ON drgenerator.DRNo = orderform.DRNumber " +
                "JOIN product_information ON orderform.ProductID = product_information.P_Code " +
                "JOIN lmer_table ON drgenerator.CashierID = lmer_table.lmer_ID " +
                "JOIN customerinfo ON drgenerator.CustomerID = customerinfo.CustomerID " +
                "JOIN customeradd ON customerinfo.CustomerAddress = customeradd.customAddNo " +
                "WHERE orderform.OrderStatus = 'DELIVERED' " +
                "GROUP BY orderform.DRNumber, customerinfo.CustomerName, drgenerator.DeliveryDate, " +
                "orderform.OrderQuantity, orderform.O_TotalAmount, product_information.P_Name, product_information.P_Flavor, " +
                "product_information.P_Net, product_information.P_Unit, lmer_table.lmer_fname, " +
                "lmer_table.lmer_lname, orderform.OrderStatus");

        sold.setModel(DbUtils.resultSetToTableModel(rs));
        JTableHeader header = sold.getTableHeader();
        header.setBackground(Color.GRAY);
        header.setForeground(Color.BLACK);
        header.setFont(new Font("Microsoft Gothic", Font.BOLD, 10));
        header.setPreferredSize(new Dimension(header.getPreferredSize().width, 30)); // Adjust header height

        // Customize row appearance
        sold.setRowHeight(30);
        sold.setShowGrid(true);
        DefaultTableCellRenderer renderer = new DefaultTableCellRenderer() {
            @Override
            public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
                Component c = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
                c.setBackground(row % 2 == 0 ? Color.LIGHT_GRAY : Color.WHITE); // Alternating row colors
                return c;
            }
        };
        for (int i = 0; i < sold.getColumnCount(); i++) {
            sold.getColumnModel().getColumn(i).setCellRenderer(renderer);
        }

        rs.close();
    } catch(SQLException ex){ 
        System.out.println("Errors: " + ex.getMessage());
    }
}


    
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        sold = new javax.swing.JTable();
        textSearch3 = new javax.swing.JTextField();
        buttonSearch = new javax.swing.JLabel();

        jPanel1.setLayout(null);

        jLabel3.setFont(new java.awt.Font("Microsoft YaHei", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(50, 150, 122));
        jLabel3.setText(" SOLD PRODUCTS");
        jLabel3.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(0, 0, 0)));
        jPanel1.add(jLabel3);
        jLabel3.setBounds(0, 0, 760, 40);

        sold.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(sold);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(10, 130, 730, 490);

        textSearch3.setBackground(new java.awt.Color(240, 240, 240));
        textSearch3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 51)));
        textSearch3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textSearch3KeyReleased(evt);
            }
        });
        jPanel1.add(textSearch3);
        textSearch3.setBounds(390, 80, 300, 30);

        buttonSearch.setBackground(new java.awt.Color(255, 255, 255));
        buttonSearch.setFont(new java.awt.Font("Microsoft YaHei", 1, 18)); // NOI18N
        buttonSearch.setForeground(new java.awt.Color(255, 255, 255));
        buttonSearch.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        buttonSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PICTURE/icons8-search-20.png"))); // NOI18N
        buttonSearch.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        buttonSearch.setOpaque(true);
        buttonSearch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonSearchMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                buttonSearchMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                buttonSearchMouseExited(evt);
            }
        });
        jPanel1.add(buttonSearch);
        buttonSearch.setBounds(700, 80, 40, 30);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 751, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 701, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void textSearch3KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textSearch3KeyReleased
        // TODO add your handling code here:'
        TableModel search = sold.getModel();
        TableRowSorter<TableModel> srch = new TableRowSorter<>(search);
        sold.setRowSorter(srch);
        srch.setRowFilter(RowFilter.regexFilter("(?i)" +textSearch3.getText()));
    }//GEN-LAST:event_textSearch3KeyReleased

    private void buttonSearchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonSearchMouseClicked
        // TODO add your handling code here:
        TableModel search = sold.getModel();
        TableRowSorter<TableModel> srch = new TableRowSorter<>(search);
        sold.setRowSorter(srch);
        srch.setRowFilter(RowFilter.regexFilter("(?i)" +textSearch3.getText()));
    }//GEN-LAST:event_buttonSearchMouseClicked

    private void buttonSearchMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonSearchMouseEntered
        // TODO add your handling code here:
        buttonSearch.setBackground(newColor);
    }//GEN-LAST:event_buttonSearchMouseEntered

    private void buttonSearchMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonSearchMouseExited
        // TODO add your handling code here:
        buttonSearch.setBackground(orig);
    }//GEN-LAST:event_buttonSearchMouseExited


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel buttonSearch;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable sold;
    private javax.swing.JTextField textSearch3;
    // End of variables declaration//GEN-END:variables
}
